@model ProductDisplayModelView

@{
    ViewData["Title"] = "Home Page";
}
<style>
    .action-btn {
        width: 60px;
        height: 60px;
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
    }

    .details-btn {
        width: auto;
        min-width: 90px;
        height: 60px;
        font-size: 1rem;
        padding: 0 12px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div class="my-4">
    <form asp-action="Index" class="row g-3 align-items-center">
        <div class="col-md-3">
            <select class="form-select" name="categoryId" title="Filter by Category">
                <option selected disabled>Category</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category.Id" selected="@(category.Id == Model.CategoryId)">
                        @category.Name
                    </option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <select class="form-select" name="brandId" title="Filter by Brand">
                <option selected disabled>Brand</option>
                @foreach (var brand in Model.Brands)
                {
                    <option value="@brand.Id" selected="@(brand.Id == Model.BrandId)">
                        @brand.Name
                    </option>
                }
            </select>
        </div>

        <div class="col-md-4">
            <input class="form-control" asp-for="STerm" placeholder="Search by title..." />
        </div>

        <div class="col-md-2 d-flex gap-2">
            <button type="submit" class="btn btn-primary w-100">
                <i class="bi bi-search"></i> Search
            </button>
            <a href="/Home/Index" class="btn btn-secondary" title="Clear filters">
                Reset
            </a>
        </div>
    </form>
</div>

<div class="row mt-4">
    @foreach (var product in Model.Products)
    {
        <div class="col-md-4 col-lg-3 mb-4">
            <div class="card h-100 shadow-sm">
                <img src="@(!string.IsNullOrEmpty(product.Images.FirstOrDefault()?.ImageUrl) ? product.Images.First().ImageUrl : "/images/NoImage.png")"
                     class="card-img-top" style="height: 180px; object-fit: cover;" alt="@product.Name" />

                <div class="card-body d-flex flex-column justify-content-between">
                    <div>
                        <h5 class="card-title text-truncate">@product.Name</h5>
                        <p class="card-text small text-muted">@product.ShortDescription</p>
                        <p class="card-text"><strong>Price:</strong> $@product.Price</p>
                    </div>
                    <div class="d-flex justify-content-between mt-3">
                        <button class="btn btn-outline-danger action-btn" title="Add to Wishlist"
                                onclick="addToWishlist(@product.Id)">
                            <i class="bi bi-heart-fill"></i>
                        </button>

                        <a asp-controller="Product" asp-action="DisplayProduct" asp-route-id="@product.Id"
                           class="btn btn-info text-white details-btn">
                            Details
                        </a>

                        @if (product.Inventory.Quantity > 0)
                        {
                            <button class="btn btn-success action-btn" onclick="addToCart(@product.Id)">
                                <i class="bi bi-cart-plus"></i>
                            </button>
                        }
                        else
                        {
                            <span class="badge bg-danger align-self-center">Out of stock</span>
                        }
                    </div>

                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        async function addToCart(productId) {
            const username = document.getElementById("username");
            if (!username) {
                window.location.href = "/Account/Login";
                return;
            }

            $.ajax({
                url: '/Cart/AddToCart',
                type: 'POST',
                data: { productId, quantity: 1 },
                success: () => location.reload(),
                error: () => alert("Not enough stock or error adding to cart.")
            });
        }

        async function addToWishlist(productId) {
            const username = document.getElementById("username");
            if (!username) {
                window.location.href = "/Account/Login";
                return;
            }

            $.ajax({
                url: '/Wishlist/AddToWishList',
                type: 'POST',
                data: { productId, quantity: 1 },
                success: () => location.reload(),
                error: () => alert("Could not add to wishlist.")
            });
        }
    </script>
}
